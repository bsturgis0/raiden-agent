version: '3.8'

services:
  raiden-server:
    build:
      context: .
      target: server
    ports:
      - "5000:5000"
    volumes:
      - ./raiden_workspace_srv:/app/raiden_workspace_srv
      - ./.env:/app/.env
    environment:
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
      - UPSTASH_REDIS_TTL=86400
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - BRAVE_SEARCH_API_KEY=${BRAVE_SEARCH_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    depends_on:
      - redis

  raiden-desktop:
    build:
      context: .
      target: desktop
      args:
        - BUILD_TYPE=desktop
    volumes:
      - ./dist:/app/dist
    environment:
      - DISPLAY=${DISPLAY}  # For Linux GUI support
      - XAUTHORITY=${XAUTHORITY}  # For Linux GUI support
    # Only build, don't run as a service
    profiles:
      - desktop

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

volumes:
  redis_data:
